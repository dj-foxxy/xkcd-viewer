// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: comics.proto

package com.appspot.mancocktail.xkcdviewer;

public final class ComicProtos {
  private ComicProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ComicListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .xkcdviewer.ComicList.Comic comics = 1;
    java.util.List<com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic> 
        getComicsList();
    com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic getComics(int index);
    int getComicsCount();
    java.util.List<? extends com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.ComicOrBuilder> 
        getComicsOrBuilderList();
    com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.ComicOrBuilder getComicsOrBuilder(
        int index);
  }
  public static final class ComicList extends
      com.google.protobuf.GeneratedMessage
      implements ComicListOrBuilder {
    // Use ComicList.newBuilder() to construct.
    private ComicList(Builder builder) {
      super(builder);
    }
    private ComicList(boolean noInit) {}
    
    private static final ComicList defaultInstance;
    public static ComicList getDefaultInstance() {
      return defaultInstance;
    }
    
    public ComicList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.appspot.mancocktail.xkcdviewer.ComicProtos.internal_static_xkcdviewer_ComicList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.appspot.mancocktail.xkcdviewer.ComicProtos.internal_static_xkcdviewer_ComicList_fieldAccessorTable;
    }
    
    public interface ComicOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required uint32 number = 1;
      boolean hasNumber();
      int getNumber();
      
      // required string title = 2;
      boolean hasTitle();
      String getTitle();
      
      // required string img_name = 3;
      boolean hasImgName();
      String getImgName();
      
      // optional .xkcdviewer.ComicList.Comic.ImgType img_type = 4 [default = PNG];
      boolean hasImgType();
      com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.ImgType getImgType();
      
      // required string message = 5;
      boolean hasMessage();
      String getMessage();
    }
    public static final class Comic extends
        com.google.protobuf.GeneratedMessage
        implements ComicOrBuilder {
      // Use Comic.newBuilder() to construct.
      private Comic(Builder builder) {
        super(builder);
      }
      private Comic(boolean noInit) {}
      
      private static final Comic defaultInstance;
      public static Comic getDefaultInstance() {
        return defaultInstance;
      }
      
      public Comic getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.appspot.mancocktail.xkcdviewer.ComicProtos.internal_static_xkcdviewer_ComicList_Comic_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.appspot.mancocktail.xkcdviewer.ComicProtos.internal_static_xkcdviewer_ComicList_Comic_fieldAccessorTable;
      }
      
      public enum ImgType
          implements com.google.protobuf.ProtocolMessageEnum {
        JPG(0, 0),
        PNG(1, 1),
        ;
        
        public static final int JPG_VALUE = 0;
        public static final int PNG_VALUE = 1;
        
        
        public final int getNumber() { return value; }
        
        public static ImgType valueOf(int value) {
          switch (value) {
            case 0: return JPG;
            case 1: return PNG;
            default: return null;
          }
        }
        
        public static com.google.protobuf.Internal.EnumLiteMap<ImgType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<ImgType>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<ImgType>() {
                public ImgType findValueByNumber(int number) {
                  return ImgType.valueOf(number);
                }
              };
        
        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.getDescriptor().getEnumTypes().get(0);
        }
        
        private static final ImgType[] VALUES = {
          JPG, PNG, 
        };
        
        public static ImgType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }
        
        private final int index;
        private final int value;
        
        private ImgType(int index, int value) {
          this.index = index;
          this.value = value;
        }
        
        // @@protoc_insertion_point(enum_scope:xkcdviewer.ComicList.Comic.ImgType)
      }
      
      private int bitField0_;
      // required uint32 number = 1;
      public static final int NUMBER_FIELD_NUMBER = 1;
      private int number_;
      public boolean hasNumber() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getNumber() {
        return number_;
      }
      
      // required string title = 2;
      public static final int TITLE_FIELD_NUMBER = 2;
      private Object title_;
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getTitle() {
        Object ref = title_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            title_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getTitleBytes() {
        Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // required string img_name = 3;
      public static final int IMG_NAME_FIELD_NUMBER = 3;
      private Object imgName_;
      public boolean hasImgName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getImgName() {
        Object ref = imgName_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            imgName_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getImgNameBytes() {
        Object ref = imgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          imgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // optional .xkcdviewer.ComicList.Comic.ImgType img_type = 4 [default = PNG];
      public static final int IMG_TYPE_FIELD_NUMBER = 4;
      private com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.ImgType imgType_;
      public boolean hasImgType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.ImgType getImgType() {
        return imgType_;
      }
      
      // required string message = 5;
      public static final int MESSAGE_FIELD_NUMBER = 5;
      private Object message_;
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getMessage() {
        Object ref = message_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            message_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getMessageBytes() {
        Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      private void initFields() {
        number_ = 0;
        title_ = "";
        imgName_ = "";
        imgType_ = com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.ImgType.PNG;
        message_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasNumber()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasTitle()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasImgName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasMessage()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, number_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getTitleBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getImgNameBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeEnum(4, imgType_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBytes(5, getMessageBytes());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, number_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getTitleBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getImgNameBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, imgType_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(5, getMessageBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      @java.lang.Override
      protected Object writeReplace() throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.ComicOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.appspot.mancocktail.xkcdviewer.ComicProtos.internal_static_xkcdviewer_ComicList_Comic_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.appspot.mancocktail.xkcdviewer.ComicProtos.internal_static_xkcdviewer_ComicList_Comic_fieldAccessorTable;
        }
        
        // Construct using com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          number_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          title_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          imgName_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          imgType_ = com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.ImgType.PNG;
          bitField0_ = (bitField0_ & ~0x00000008);
          message_ = "";
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.getDescriptor();
        }
        
        public com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic getDefaultInstanceForType() {
          return com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.getDefaultInstance();
        }
        
        public com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic build() {
          com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic buildPartial() {
          com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic result = new com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.number_ = number_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.title_ = title_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.imgName_ = imgName_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.imgType_ = imgType_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.message_ = message_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic) {
            return mergeFrom((com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic other) {
          if (other == com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.getDefaultInstance()) return this;
          if (other.hasNumber()) {
            setNumber(other.getNumber());
          }
          if (other.hasTitle()) {
            setTitle(other.getTitle());
          }
          if (other.hasImgName()) {
            setImgName(other.getImgName());
          }
          if (other.hasImgType()) {
            setImgType(other.getImgType());
          }
          if (other.hasMessage()) {
            setMessage(other.getMessage());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasNumber()) {
            
            return false;
          }
          if (!hasTitle()) {
            
            return false;
          }
          if (!hasImgName()) {
            
            return false;
          }
          if (!hasMessage()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                number_ = input.readUInt32();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                title_ = input.readBytes();
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                imgName_ = input.readBytes();
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.ImgType value = com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.ImgType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000008;
                  imgType_ = value;
                }
                break;
              }
              case 42: {
                bitField0_ |= 0x00000010;
                message_ = input.readBytes();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required uint32 number = 1;
        private int number_ ;
        public boolean hasNumber() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getNumber() {
          return number_;
        }
        public Builder setNumber(int value) {
          bitField0_ |= 0x00000001;
          number_ = value;
          onChanged();
          return this;
        }
        public Builder clearNumber() {
          bitField0_ = (bitField0_ & ~0x00000001);
          number_ = 0;
          onChanged();
          return this;
        }
        
        // required string title = 2;
        private Object title_ = "";
        public boolean hasTitle() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public String getTitle() {
          Object ref = title_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            title_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setTitle(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          title_ = value;
          onChanged();
          return this;
        }
        public Builder clearTitle() {
          bitField0_ = (bitField0_ & ~0x00000002);
          title_ = getDefaultInstance().getTitle();
          onChanged();
          return this;
        }
        void setTitle(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000002;
          title_ = value;
          onChanged();
        }
        
        // required string img_name = 3;
        private Object imgName_ = "";
        public boolean hasImgName() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public String getImgName() {
          Object ref = imgName_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            imgName_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setImgName(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          imgName_ = value;
          onChanged();
          return this;
        }
        public Builder clearImgName() {
          bitField0_ = (bitField0_ & ~0x00000004);
          imgName_ = getDefaultInstance().getImgName();
          onChanged();
          return this;
        }
        void setImgName(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000004;
          imgName_ = value;
          onChanged();
        }
        
        // optional .xkcdviewer.ComicList.Comic.ImgType img_type = 4 [default = PNG];
        private com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.ImgType imgType_ = com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.ImgType.PNG;
        public boolean hasImgType() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.ImgType getImgType() {
          return imgType_;
        }
        public Builder setImgType(com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.ImgType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          imgType_ = value;
          onChanged();
          return this;
        }
        public Builder clearImgType() {
          bitField0_ = (bitField0_ & ~0x00000008);
          imgType_ = com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.ImgType.PNG;
          onChanged();
          return this;
        }
        
        // required string message = 5;
        private Object message_ = "";
        public boolean hasMessage() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        public String getMessage() {
          Object ref = message_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            message_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setMessage(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          message_ = value;
          onChanged();
          return this;
        }
        public Builder clearMessage() {
          bitField0_ = (bitField0_ & ~0x00000010);
          message_ = getDefaultInstance().getMessage();
          onChanged();
          return this;
        }
        void setMessage(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000010;
          message_ = value;
          onChanged();
        }
        
        // @@protoc_insertion_point(builder_scope:xkcdviewer.ComicList.Comic)
      }
      
      static {
        defaultInstance = new Comic(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:xkcdviewer.ComicList.Comic)
    }
    
    // repeated .xkcdviewer.ComicList.Comic comics = 1;
    public static final int COMICS_FIELD_NUMBER = 1;
    private java.util.List<com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic> comics_;
    public java.util.List<com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic> getComicsList() {
      return comics_;
    }
    public java.util.List<? extends com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.ComicOrBuilder> 
        getComicsOrBuilderList() {
      return comics_;
    }
    public int getComicsCount() {
      return comics_.size();
    }
    public com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic getComics(int index) {
      return comics_.get(index);
    }
    public com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.ComicOrBuilder getComicsOrBuilder(
        int index) {
      return comics_.get(index);
    }
    
    private void initFields() {
      comics_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getComicsCount(); i++) {
        if (!getComics(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < comics_.size(); i++) {
        output.writeMessage(1, comics_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < comics_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, comics_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    @java.lang.Override
    protected Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.appspot.mancocktail.xkcdviewer.ComicProtos.internal_static_xkcdviewer_ComicList_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.appspot.mancocktail.xkcdviewer.ComicProtos.internal_static_xkcdviewer_ComicList_fieldAccessorTable;
      }
      
      // Construct using com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getComicsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (comicsBuilder_ == null) {
          comics_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          comicsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.getDescriptor();
      }
      
      public com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList getDefaultInstanceForType() {
        return com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.getDefaultInstance();
      }
      
      public com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList build() {
        com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList buildPartial() {
        com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList result = new com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList(this);
        int from_bitField0_ = bitField0_;
        if (comicsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            comics_ = java.util.Collections.unmodifiableList(comics_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.comics_ = comics_;
        } else {
          result.comics_ = comicsBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList) {
          return mergeFrom((com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList other) {
        if (other == com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.getDefaultInstance()) return this;
        if (comicsBuilder_ == null) {
          if (!other.comics_.isEmpty()) {
            if (comics_.isEmpty()) {
              comics_ = other.comics_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureComicsIsMutable();
              comics_.addAll(other.comics_);
            }
            onChanged();
          }
        } else {
          if (!other.comics_.isEmpty()) {
            if (comicsBuilder_.isEmpty()) {
              comicsBuilder_.dispose();
              comicsBuilder_ = null;
              comics_ = other.comics_;
              bitField0_ = (bitField0_ & ~0x00000001);
              comicsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getComicsFieldBuilder() : null;
            } else {
              comicsBuilder_.addAllMessages(other.comics_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getComicsCount(); i++) {
          if (!getComics(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.Builder subBuilder = com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addComics(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .xkcdviewer.ComicList.Comic comics = 1;
      private java.util.List<com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic> comics_ =
        java.util.Collections.emptyList();
      private void ensureComicsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          comics_ = new java.util.ArrayList<com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic>(comics_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic, com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.Builder, com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.ComicOrBuilder> comicsBuilder_;
      
      public java.util.List<com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic> getComicsList() {
        if (comicsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(comics_);
        } else {
          return comicsBuilder_.getMessageList();
        }
      }
      public int getComicsCount() {
        if (comicsBuilder_ == null) {
          return comics_.size();
        } else {
          return comicsBuilder_.getCount();
        }
      }
      public com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic getComics(int index) {
        if (comicsBuilder_ == null) {
          return comics_.get(index);
        } else {
          return comicsBuilder_.getMessage(index);
        }
      }
      public Builder setComics(
          int index, com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic value) {
        if (comicsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComicsIsMutable();
          comics_.set(index, value);
          onChanged();
        } else {
          comicsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setComics(
          int index, com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.Builder builderForValue) {
        if (comicsBuilder_ == null) {
          ensureComicsIsMutable();
          comics_.set(index, builderForValue.build());
          onChanged();
        } else {
          comicsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addComics(com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic value) {
        if (comicsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComicsIsMutable();
          comics_.add(value);
          onChanged();
        } else {
          comicsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addComics(
          int index, com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic value) {
        if (comicsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComicsIsMutable();
          comics_.add(index, value);
          onChanged();
        } else {
          comicsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addComics(
          com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.Builder builderForValue) {
        if (comicsBuilder_ == null) {
          ensureComicsIsMutable();
          comics_.add(builderForValue.build());
          onChanged();
        } else {
          comicsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addComics(
          int index, com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.Builder builderForValue) {
        if (comicsBuilder_ == null) {
          ensureComicsIsMutable();
          comics_.add(index, builderForValue.build());
          onChanged();
        } else {
          comicsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllComics(
          java.lang.Iterable<? extends com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic> values) {
        if (comicsBuilder_ == null) {
          ensureComicsIsMutable();
          super.addAll(values, comics_);
          onChanged();
        } else {
          comicsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearComics() {
        if (comicsBuilder_ == null) {
          comics_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          comicsBuilder_.clear();
        }
        return this;
      }
      public Builder removeComics(int index) {
        if (comicsBuilder_ == null) {
          ensureComicsIsMutable();
          comics_.remove(index);
          onChanged();
        } else {
          comicsBuilder_.remove(index);
        }
        return this;
      }
      public com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.Builder getComicsBuilder(
          int index) {
        return getComicsFieldBuilder().getBuilder(index);
      }
      public com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.ComicOrBuilder getComicsOrBuilder(
          int index) {
        if (comicsBuilder_ == null) {
          return comics_.get(index);  } else {
          return comicsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.ComicOrBuilder> 
           getComicsOrBuilderList() {
        if (comicsBuilder_ != null) {
          return comicsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(comics_);
        }
      }
      public com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.Builder addComicsBuilder() {
        return getComicsFieldBuilder().addBuilder(
            com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.getDefaultInstance());
      }
      public com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.Builder addComicsBuilder(
          int index) {
        return getComicsFieldBuilder().addBuilder(
            index, com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.getDefaultInstance());
      }
      public java.util.List<com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.Builder> 
           getComicsBuilderList() {
        return getComicsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic, com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.Builder, com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.ComicOrBuilder> 
          getComicsFieldBuilder() {
        if (comicsBuilder_ == null) {
          comicsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic, com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.Builder, com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.ComicOrBuilder>(
                  comics_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          comics_ = null;
        }
        return comicsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:xkcdviewer.ComicList)
    }
    
    static {
      defaultInstance = new ComicList(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:xkcdviewer.ComicList)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xkcdviewer_ComicList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xkcdviewer_ComicList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xkcdviewer_ComicList_Comic_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xkcdviewer_ComicList_Comic_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014comics.proto\022\nxkcdviewer\"\335\001\n\tComicList" +
      "\022+\n\006comics\030\001 \003(\0132\033.xkcdviewer.ComicList." +
      "Comic\032\242\001\n\005Comic\022\016\n\006number\030\001 \002(\r\022\r\n\005title" +
      "\030\002 \002(\t\022\020\n\010img_name\030\003 \002(\t\022:\n\010img_type\030\004 \001" +
      "(\0162#.xkcdviewer.ComicList.Comic.ImgType:" +
      "\003PNG\022\017\n\007message\030\005 \002(\t\"\033\n\007ImgType\022\007\n\003JPG\020" +
      "\000\022\007\n\003PNG\020\001B1\n\"com.appspot.mancocktail.xk" +
      "cdviewerB\013ComicProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_xkcdviewer_ComicList_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_xkcdviewer_ComicList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xkcdviewer_ComicList_descriptor,
              new java.lang.String[] { "Comics", },
              com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.class,
              com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Builder.class);
          internal_static_xkcdviewer_ComicList_Comic_descriptor =
            internal_static_xkcdviewer_ComicList_descriptor.getNestedTypes().get(0);
          internal_static_xkcdviewer_ComicList_Comic_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xkcdviewer_ComicList_Comic_descriptor,
              new java.lang.String[] { "Number", "Title", "ImgName", "ImgType", "Message", },
              com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.class,
              com.appspot.mancocktail.xkcdviewer.ComicProtos.ComicList.Comic.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
